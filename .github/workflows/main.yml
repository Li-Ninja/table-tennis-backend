name: CI/CD Pipeline

on:
  push:
    tags:
      - '*'
    # branches:
    #   - 'main'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.9.0'

      - name: Cache Yarn dependencies
        uses: actions/cache@v2
        with:
          path: .yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install

      - name: Build and list output
        run: |
          yarn build
          ls -lR
          pwd
          echo "Listing contents of current directory"
          ls -al

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: next-artifacts
          path: .next
          retention-days: 15

  docker-image:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: next-artifacts
          path: .next

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ghcr.io/li-ninja/table-tennis:${{ github.sha }}
            ghcr.io/li-ninja/table-tennis:latest

  deploy:
    needs: docker-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check current directory and list files
        run: |
          pwd
          ls -la

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.GCP_PRIVATE_KEY }}

      - name: Deploy to server
        run: |
          scp -o StrictHostKeyChecking=no ./docker-compose.yml ${{ secrets.GCP_USER }}@${{ secrets.GCP_SERVER }}:/home/${{ secrets.GCP_USER }}
          ssh -o StrictHostKeyChecking=no ${{ secrets.GCP_USER }}@${{ secrets.GCP_SERVER }} << EOF
          docker-compose up -d --no-deps --build table-tennis
          EOF