name: CI/CD Pipeline

on:
    push:
        tags:
            - "*"

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Set up .NET
              uses: actions/setup-dotnet@v1
              with:
                  dotnet-version: "8.0"

            - name: Build and publish .NET application
              run: |
                  dotnet restore "table-tennis-backend.csproj"
                  dotnet build "table-tennis-backend.csproj" --no-restore
                  dotnet publish "table-tennis-backend.csproj" -c Release -o ./publish

            - name: Upload build artifacts
              uses: actions/upload-artifact@v2
              with:
                  name: net-publish
                  path: /publish

    docker-image:
        needs: build
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Download build artifacts
              uses: actions/download-artifact@v2
              with:
                  name: net-publish
                  path: /app/publish

            - name: Set up Docker
              uses: docker/setup-buildx-action@v1

            - name: Log in to GitHub Container Registry
              uses: docker/login-action@v1
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Build and push Docker images
              uses: docker/build-push-action@v2
              with:
                  context: .
                  file: ./Dockerfile
                  push: true
                  tags: |
                      ghcr.io/li-ninja/table-tennis-backend:${{ github.sha }}
                      ghcr.io/li-ninja/table-tennis-backend:latest

    deploy:
        needs: docker-image
        runs-on: ubuntu-latest
        steps:
            - name: Set up SSH
              uses: webfactory/ssh-agent@v0.5.3
              with:
                  ssh-private-key: ${{ secrets.GCP_PRIVATE_KEY }}

            - name: Deploy to server
              run: |
                  scp -o StrictHostKeyChecking=no ./docker-compose.yml ${{ secrets.GCP_USER }}@${{ secrets.GCP_SERVER }}:/home/${{ secrets.GCP_USER }} "\
                  ssh -o StrictHostKeyChecking=no ${{ secrets.GCP_USER }}@${{ secrets.GCP_SERVER }} "\
                  DB_IP=${{ secrets.DB_IP }} \
                  DB_PORT=${{ secrets.DB_PORT }} \
                  DB_USER=${{ secrets.DB_USER }} \
                  DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
                  docker-compose up -d --no-deps --build table-tennis-backend"
